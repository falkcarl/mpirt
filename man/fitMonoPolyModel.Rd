% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MPfunctions.R
\name{fitMonoPolyModel}
\alias{fitMonoPolyModel}
\title{Wrapper for fitting MP models with OpenMx.}
\usage{
fitMonoPolyModel(
  dat,
  k = rep(0, ncol(dat)),
  fit = TRUE,
  itemtype = NULL,
  ncat = NULL,
  priors = FALSE,
  randstart = FALSE,
  startimat = NULL,
  pvar = 500,
  pvartau = NULL,
  pvaralpha = NULL,
  taumean = -10,
  alphamean = 0,
  qpoints = 101,
  qwidth = 5,
  se = FALSE,
  infotype = "oakes1999",
  semMethod = NULL,
  ...
)
}
\arguments{
\item{dat}{- the data}

\item{k}{- the order of the polynomial}

\item{fit}{- actually fit the model or just return all of the matrices?}

\item{itemtype}{- character vector of same length as number of items that may allow different types of item on a single test. Right now I only support:
1. Logistic function of monotonic polynomial ("lmp", dichotomous items)
2. Monotonic Polynomial Graded Response Model ("grmp", GRMP - about to be under review; still in a forked, not publicly available version of rpf)
3. Monotonic Polynomial Generalized Partial Credit Model ("gpcmp", GPCMP)
If an option is not specified, it tries to auto-detect dichotomous vs. polytomous items}

\item{ncat}{- number of categories per item; if null, tries to auto-detect}

\item{priors}{- logical value indicating whether to use prior distributions for alpha and tau}

\item{randstart}{stuff}

\item{startimat}{- custom starting values are possible, but currently I only support custom starting values based on an item parameter matrix in the format
of OpenMx. This is useful if we have already fitted a model and wish to increase/decrease polynomial order for just an item or two.
We can use estimates from the initially fitted model for all other items, and any corresponding item parameters.
To see an example of what such a matrix looks like, fit a model with this function, then extract item paramter matrix to see its format.}

\item{pvar}{- prior variance for alpha and tau parameters. Currently I just use this blunt approach of having the same prior variance for all alpha and tau,
regardless of what item.}

\item{pvartau}{stuff}

\item{pvaralpha}{stuff}

\item{taumean}{- prior mean for tau parameters. -10 apparently works well in practice and I believe this is what Falk & Cai (2016, Psychometrika) used}

\item{alphamean}{stuff}

\item{qpoints}{- number of quadrature points - passed to mxExpectationBA81.}

\item{qwidth}{- defines limits of quadrature grid. I think "5" here means -5 to 5. See mxExpectationBA81 documentation.}

\item{se}{stuff}

\item{infotype}{stuff}

\item{semMethod}{stuff}

\item{...}{stuff}
}
\value{
Describe what it returns.
}
\description{
Wrapper for fitting MP models with OpenMx.
}
\details{
Insert details here.  Setting up models in OpenMx is a bit of a pain
 This attempts to make it easier, but then I have lots of things hard-coded, and only
 have options that I've found to be useful in past research.
}
\examples{
\donttest{
# do examples here
}
}
\references{
Refs here
}
\seealso{
Anything else?
}
